{{- define "distributed-scheduler.deployment.tpl" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Args.Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "distributed-scheduler.labels" . | nindent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "distributed-scheduler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "distributed-scheduler.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "distributed-scheduler.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Args.Values.image.repository }}:{{ .Args.Values.image.version | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Args.Values.environment.createEnvConfigmap }}
          envFrom:
            - configMapRef:
                name: {{ .Args.Values.environment.name }}
          {{- end }}
          {{- with .Args.Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Args.Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
        {{- end }}
          ports:
            - name: http
              containerPort: {{ .Args.Values.servicePort | default .Values.service.port }}
          {{- with .Args.Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Args.Values.liveness }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Args.Values.readiness }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
          {{- if .Args.Values.resources }}
            {{- toYaml .Args.Values.resources | nindent 12 }}
          {{- else }}
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}